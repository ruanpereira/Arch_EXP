{"clipboardHistory":[{"value":"tÃ­gio de Bakunin como ativista o tornou um dos ideÃ³logos mais famosos da Europa e sua influÃªncia foi substancial ","recorded":"2025-08-06 20:01:47.300490889","filePath":"null","pinned":false},{"value":"go to \n","recorded":"2025-08-06 16:13:12.883877413","filePath":"null","pinned":false},{"value":"log in\n","recorded":"2025-08-06 16:13:12.619132717","filePath":"null","pinned":false},{"value":"all data included, deselect all, subscription, ok\n","recorded":"2025-08-06 16:13:12.315511593","filePath":"null","pinned":false},{"value":"next step, export\n","recorded":"2025-08-06 16:13:12.278914335","filePath":"null","pinned":false},{"value":"import file (aPP) .zip\n","recorded":"2025-08-06 16:13:12.264509214","filePath":"null","pinned":false},{"value":".csv extratecd\n","recorded":"2025-08-06 16:13:11.302386398","filePath":"null","pinned":false},{"value":"download\n","recorded":"2025-08-06 15:44:56.006536850","filePath":"null","pinned":false},{"value":"\n","recorded":"2025-08-06 15:44:54.871453242","filePath":"null","pinned":false},{"value":"@DokiDoMiki","recorded":"2025-08-03 22:54:14.809160257","filePath":"null","pinned":false},{"value":"Return of the Obra Dinn","recorded":"2025-08-03 22:44:18.504602430","filePath":"null","pinned":false},{"value":"vf9sFi6Nsg7EbY","recorded":"2025-08-03 21:42:30.739618410","filePath":"null","pinned":false},{"value":"Zskx23@#","recorded":"2025-07-29 05:32:01.240029370","filePath":"null","pinned":false},{"value":"ðŸ“· 618755-271025409.png","recorded":"2025-07-27 20:27:24.250395413","filePath":"/home/black_aktsu/.config/clipse/tmp_files/618755-271025409.png","pinned":false},{"value":"ðŸ“· 248926-183225041.png","recorded":"2025-07-27 17:02:46.237174606","filePath":"/home/black_aktsu/.config/clipse/tmp_files/248926-183225041.png","pinned":false},{"value":"\u003cmeta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\"\u003e\u003cimg src=\"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse2.mm.bing.net%2Fth%2Fid%2FOIP.m9qpP8CTmHXuczk_vHIvmQHaFj%3Fpid%3DApi\u0026amp;f=1\u0026amp;ipt=b454a62205aa0f864a1c584f4163446e813f6f0cc5ae507cea03b02f2bb24a62\" class=\"mD_7N7b1a7ZoGbPdjYtp\" alt=\"1999 Clover Green Pearl Honda Civic LX Sedan #28875099 Photo #2 ...\" loading=\"eager\"\u003e","recorded":"2025-07-27 17:02:46.183936191","filePath":"null","pinned":false},{"value":"ðŸ“· 210556-777560482.png","recorded":"2025-07-27 17:02:40.857173021","filePath":"/home/black_aktsu/.config/clipse/tmp_files/210556-777560482.png","pinned":false},{"value":"\u003cmeta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\"\u003e\u003cimg src=\"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse4.mm.bing.net%2Fth%2Fid%2FOIP.MGMBF247Oa535umyNLVj1gHaFj%3Fpid%3DApi\u0026amp;f=1\u0026amp;ipt=7cbb0a4b591b397e119fc28bb1b334483cddf4bbf892b90dc9c356b5ba95445f\" class=\"mD_7N7b1a7ZoGbPdjYtp\" alt=\"1999 Iced Teal Pearl Honda Civic LX Sedan #50502116 Photo #2 | GTCarLot ...\" loading=\"eager\"\u003e","recorded":"2025-07-27 17:02:40.786754365","filePath":"null","pinned":false},{"value":"ðŸ“· 169475-743549914.png","recorded":"2025-07-27 16:46:16.844665437","filePath":"/home/black_aktsu/.config/clipse/tmp_files/169475-743549914.png","pinned":false},{"value":"ðŸ“· 67950-532292994.png","recorded":"2025-07-26 12:41:22.599957717","filePath":"/home/black_aktsu/.config/clipse/tmp_files/67950-532292994.png","pinned":false},{"value":"ðŸ“· 22204-600845744.png","recorded":"2025-07-26 12:40:15.639419155","filePath":"/home/black_aktsu/.config/clipse/tmp_files/22204-600845744.png","pinned":false},{"value":"ðŸ“· 623491-584442993.png","recorded":"2025-07-26 12:39:37.814792968","filePath":"/home/black_aktsu/.config/clipse/tmp_files/623491-584442993.png","pinned":false},{"value":"ðŸ“· 20836-323031417.png","recorded":"2025-07-26 12:36:46.336706428","filePath":"/home/black_aktsu/.config/clipse/tmp_files/20836-323031417.png","pinned":false},{"value":"ðŸ“· 21405-547571069.png","recorded":"2025-07-26 12:32:47.589437374","filePath":"/home/black_aktsu/.config/clipse/tmp_files/21405-547571069.png","pinned":false},{"value":"ðŸ“· 184162-093291230.png","recorded":"2025-07-26 12:23:44.361354556","filePath":"/home/black_aktsu/.config/clipse/tmp_files/184162-093291230.png","pinned":false},{"value":"ðŸ“· 52868-040423165.png","recorded":"2025-07-26 12:19:49.090546210","filePath":"/home/black_aktsu/.config/clipse/tmp_files/52868-040423165.png","pinned":false},{"value":"ðŸ“· 38759-207937018.png","recorded":"2025-07-26 11:57:35.223163684","filePath":"/home/black_aktsu/.config/clipse/tmp_files/38759-207937018.png","pinned":false},{"value":"ðŸ“· 104540-932132240.png","recorded":"2025-07-26 11:45:14.097160667","filePath":"/home/black_aktsu/.config/clipse/tmp_files/104540-932132240.png","pinned":false},{"value":"https://scare.ca/dl/qBittorrent/thepiratebay.py","recorded":"2025-07-23 22:30:17.666717712","filePath":"null","pinned":false},{"value":"https://raw.githubusercontent.com/MadeOfMagicAndWires/qBit-plugins/master/engines/nyaasi.py","recorded":"2025-07-23 22:29:50.696208261","filePath":"null","pinned":false},{"value":"https://raw.githubusercontent.com/v1k45/1337x-qBittorrent-search-plugin/refs/heads/master/leetx.py","recorded":"2025-07-23 22:29:05.213193219","filePath":"null","pinned":false},{"value":"#VERSION: 1.2\n#AUTHORS: Vikas Yadav (https://github.com/v1k45 | http://v1k45.com)\n\n# Redistribution and use in source and binary forms, with or without\n# modification, are permitted provided that the following conditions are met:\n#\n#    * Redistributions of source code must retain the above copyright notice,\n#      this list of conditions and the following disclaimer.\n#    * Redistributions in binary form must reproduce the above copyright\n#      notice, this list of conditions and the following disclaimer in the\n#      documentation and/or other materials provided with the distribution.\n#    * Neither the name of the author nor the names of its contributors may be\n#      used to endorse or promote products derived from this software without\n#      specific prior written permission.\n#\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n# POSSIBILITY OF SUCH DAMAGE.\n\nfrom __future__ import print_function\nimport re\n\n# python3 suppport (or python2 fallback, if you will)\ntry:\n    from html.parser import HTMLParser\nexcept ImportError:\n    from HTMLParser import HTMLParser\n\nfrom helpers import retrieve_url, download_file\nfrom novaprinter import prettyPrinter\n\n\nLEETX_DOMAIN = \"https://1337x.to\"\n\n\nclass LeetxParser(HTMLParser):\n    current_result = {}\n    current_item = None\n    inside_tbody = False\n    inside_row = False\n\n    A, TBODY, TR, TD, SPAN = ('a', 'tbody', 'tr', 'td', 'span')\n\n    def handle_starttag(self, tag, attrs):\n        # are we inside the results table body or not.\n        self.inside_tbody = self.inside_tbody or tag == self.TBODY\n        # if not, no need to process this tag any further.\n        if not self.inside_tbody:\n            return\n\n        # convert attrs tuple to dictonary\n        attrs = dict(attrs)\n\n        # for torrent name and link\n        link = attrs.get('href', '')\n        if self.inside_tbody and tag == self.A and link.startswith('/torrent'):  # noqa\n            self.current_result['link'] = LEETX_DOMAIN + link\n            self.current_result['desc_link'] = LEETX_DOMAIN + link\n            self.current_result['engine_url'] = LEETX_DOMAIN\n            self.current_item = 'name'\n\n        # to ignore uploader name attached to the torrent size in span tag\n        if tag == self.SPAN:\n            self.current_item = None\n\n        # if this is a \u003ctd\u003e there can be seeds, leeches or size inside it.\n        if tag == self.TD:\n            self.inside_row = True\n\n            # find apporipate data key using class name of td\n            for item in ['seeds', 'leeches', 'size']:\n                if item in attrs.get('class', ''):\n                    self.current_item = item\n                    break\n\n    def handle_data(self, data):\n        # do not process data if we are not inside the table body\n        if self.inside_tbody and self.current_item:\n            prev_value = self.current_result.get(self.current_item, '')\n            self.current_result[self.current_item] = prev_value + data\n\n    def handle_endtag(self, tag):\n        # we are exiting the table body\n        # no data will be processed after this.\n        if tag == self.TBODY:\n            self.inside_tbody = False\n\n        # exiting the table data and maybe moving td or tr element\n        elif self.inside_tbody and self.inside_row and tag == self.TD:\n            self.inside_row = False\n            self.current_item = None\n\n        # exiting the tr element, which means all necessary data\n        # for a torrent has been extracted, we should save it\n        # and clean the object's state.\n        elif self.inside_tbody and tag == self.TR:\n            self.current_result['leech'] = self.current_result['leeches']\n            prettyPrinter(self.current_result)\n            self.current_result = {}\n            self.current_item = None\n\n\nPAGINATION_PATTERN = re.compile('\u003cli class=\"last\"\u003e\u003ca href=\"/search/(.*)/([0-9])/\"\u003eLast\u003c/a\u003e\u003c/li\u003e')  # noqa\nDOWNLOAD_PATTERN = re.compile('\u003ca class\\=\"(.*) btn-(.*)\" target\\=\"_blank\" href\\=\"(.*)\"\u003e\u003cspan class\\=\"icon\"\u003e\u003ci class\\=\"flaticon-torrent-download\"\u003e\u003c/i\u003e\u003c/span\u003eITORRENTS MIRROR\u003c/a\u003e')  # noqa\n\n\nclass leetx(object):\n    url = LEETX_DOMAIN\n    name = \"1337x\"\n    supported_categories = {\n        'all': 'All',\n        'movies': 'Movies',\n        'tv': 'TV',\n        'music': 'Music',\n        'games': 'Games',\n        'anime': 'Anime',\n        'software': 'Apps'\n    }\n\n    def download_torrent(self, info):\n        # since 1337x does not provide torrent links in the search results,\n        # we will have to fetch the page and extract the torrent link\n        # and then call the download_file function on it.\n        torrent_page = retrieve_url(info)\n        torrent_link_match = DOWNLOAD_PATTERN.search(torrent_page)\n        if torrent_link_match and torrent_link_match.groups():\n            torrent_file = torrent_link_match.groups()[2].replace(\"http\", \"https\")  # noqa\n            print(download_file(torrent_file))\n        else:\n            print('')\n\n    def search(self, what, cat='all'):\n        cat = cat.lower()\n\n        # decide which type of search to perform based on category\n        search_page = \"search\" if cat == 'all' else 'category-search'\n        search_url = \"{url}/{search_page}/{search_query}/\".format(\n            url=self.url, search_page=search_page, search_query=what)\n\n        # apply search category to url, if any.\n        if cat != 'all':\n            search_url += self.supported_categories[cat] + \"/\"\n\n        # download the page\n        data = retrieve_url(search_url + \"1/\")\n\n        # extract no of pages to be extracted through pagination\n        more_pages = 1\n        pagination_match = PAGINATION_PATTERN.search(data)\n        if pagination_match and pagination_match.groups()[1].isdigit():\n            more_pages = int(pagination_match.groups()[1])\n\n        parser = LeetxParser()\n        parser.feed(data)\n        parser.close()\n\n        # we start the loop from 2 because we are already done first page.\n        # the +2 at the end of the range because range(0, 100) is [0,1..,98,99]\n        # shifing the end page by 2 positions will balance the number of pages.\n        for current_page in range(2, more_pages + 2):\n            # repeat\n            data = retrieve_url(search_url + str(current_page) + \"/\")\n            parser.feed(data)\n            parser.close()\n","recorded":"2025-07-23 22:26:47.980729231","filePath":"null","pinned":false},{"value":"# VERSION: 4.1\n# AUTHORS: Scare! (https://Scare.ca/dl/qBittorrent/)\n\n# added categories to v1.0 by LightDestory https://github.com/LightDestory\n\nimport urllib.parse\nimport json\nfrom helpers import retrieve_url,download_file\nfrom novaprinter import prettyPrinter\n\n\nclass thepiratebay(object):\n\turl='https://thepiratebay.org'\n\tapi='https://apibay.org'\n\tname='The Pirate Bay w. categories'\n\n\t# uncomment appropriate lines to include TPB category in qBittorrent search category\n\t# currently set to include only HD video for \"movies\" \u0026 \"tv\"\n\tsupported_categories={\n\t\t'all':\t\t[0],\n\t\t'anime':\n\t\t[\n\t\t\t207,\t# Video \u003e HD - Movies\n\t\t\t208,\t# Video \u003e HD - TV shows\n\t\t\t201,\t# Video \u003e Movies\n\t\t\t202,\t# Video \u003e Movies DVDR\n\t\t\t205,\t# Video \u003e TV shows\n\t\t\t206,\t# Video \u003e Handheld\n\t\t\t209,\t# Video \u003e 3D\n\t\t\t299,\t# Video \u003e Other\n\t\t\t501,\t# Porn \u003e Movies\n\t\t\t502,\t# Porn \u003e Movies DVDR\n\t\t\t505,\t# Porn \u003e HD - Movies\n\t\t\t599,\t# Porn \u003e Other\t\t\t!!! comma after each number...\n\t\t\t699\t\t# Other \u003e Other\t\t\t!!! ...except the last!\n\t\t],\n\t\t'books':\n\t\t[\n#\t\t\t102,\t# Audio \u003e Audio books\n\t\t\t601,\t# Other \u003e E-books\n\t\t\t602\t\t# Other \u003e Comics\n\t\t],\n\t\t'games':\n\t\t[\n\t\t\t400,\t# Games\n\t\t\t504\t\t# Porn \u003e Games\n\t\t],\n\t\t'movies':\n\t\t[\n#\t\t\t201,\t# Video \u003e Movies\n#\t\t\t202,\t# Video \u003e Movies DVDR\n#\t\t\t209,\t# Video \u003e 3D\n\t\t\t207\t\t# Video \u003e HD - Movies\n\t\t],\n\t\t'music':\n\t\t[\n#\t\t\t203,\t# Video \u003e Music videos\n\t\t\t101,\t# Audio \u003e Music\n\t\t\t104\t\t# Audio \u003e FLAC\n\t\t],\n\t\t'pictures':\n\t\t[\n\t\t\t603,\t# Other \u003e Pictures\n\t\t\t604,\t# Other \u003e Covers\n\t\t\t503\t\t# Porn \u003e Pictures\n\t\t],\n\t\t'software':\t# but not games\n\t\t[\n\t\t\t300\t\t# Applications\n\t\t],\n\t\t'tv':\n\t\t[\n#\t\t\t205,\t# Video \u003e TV shows\n\t\t\t208\t\t# Video \u003e HD - TV shows\n\t\t]\n\t}\n\n\ttorrent='{self.url}/description.php?id={id}'\n\tdownload='{self.api}/t.php?id={id}'\n\tmagnet='magnet:?xt=urn:btih:{hash}\u0026dn={name}\u0026{trackers} {info}'\n\tquery='{self.api}/q.php?q={what}\u0026cat={category}'\n\n\ttrackers=[\n\t\t'udp://tracker.coppersurfer.tk:6969/announce',\n\t\t'udp://tracker.openbittorrent.com:6969/announce',\n\t\t'udp://9.rarbg.to:2710/announce',\n\t\t'udp://9.rarbg.me:2780/announce',\n\t\t'udp://9.rarbg.to:2730/announce',\n\t\t'udp://tracker.opentrackr.org:1337',\n\t\t'http://p4p.arenabg.com:1337/announce',\n\t\t'udp://tracker.torrent.eu.org:451/announce',\n\t\t'udp://tracker.tiny-vps.com:6969/announce',\n\t\t'udp://open.stealth.si:80/announce']\n\n\tdef download_torrent(self,info):\n\t\ttorrent_id=urllib.parse.unquote(info).split('=')[-1]\n\t\turl=self.download.format(self=self,id=torrent_id)\n\t\tdata=json.loads(retrieve_url(url))\n\t\tif data:\n\t\t\tname=urllib.parse.quote(data['name'],safe='')\n\t\t\ttrs=urllib.parse.urlencode({'tr':self.trackers},True)\n\t\t\tprint(self.magnet.format(hash\t\t=data['info_hash'],\n\t\t\t\t\t\t\t\t\t name\t\t=name,\n\t\t\t\t\t\t\t\t\t trackers\t=trs,\n\t\t\t\t\t\t\t\t\t info\t\t=info))\n\t\telse:\n\t\t\traise Exception('Error in \"'+self.name+'\" search plugin, download_torrent()')\n\n\tdef search(self,what,cat='all'):\n\t\tx=[]\n\t\tfor category in self.supported_categories[cat]:\n\t\t\turl=self.query.format(self=self,what=what,category=category)\n\t\t\tx+=json.loads(retrieve_url(url))\n\t\tself.parseJSON(x)\n\n\tdef parseJSON(self,collection):\n\t\tfor torrent in collection:\n\t\t\ttorrent_id=self.torrent.format(self=self,id=torrent['id'])\n\t\t\tdata={\n\t\t\t\t'link':\t\t\turllib.parse.quote(torrent_id),\n\t\t\t\t'name':\t\t\ttorrent['name'],\n\t\t\t\t'size':\t\t\ttorrent['size'],\n\t\t\t\t'seeds':\t\ttorrent['seeders'],\n\t\t\t\t'leech':\t\ttorrent['leechers'],\n\t\t\t\t'engine_url':\tself.url,\n\t\t\t\t'desc_link':\ttorrent_id\n\t\t\t}\n\t\t\tprettyPrinter(data)\n","recorded":"2025-07-23 22:24:29.974375861","filePath":"null","pinned":false},{"value":"# -*- coding: utf-8 -*-\n#VERSION: 1.2\n#AUTHORS: Joost Bremmer (toost.b@gmail.com)\n#\n#  This program is free software: you can redistribute it and/or modify\n#  it under the terms of the GNU General Public License as published by\n#  the Free Software Foundation, either version 3 of the License, or\n#  (at your option) any later version.\n#\n#  This program is distributed in the hope that it will be useful,\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n#  GNU General Public License for more details.\n#\n#  You should have received a copy of the GNU General Public License\n#  along with this program.  If not, see \u003chttps://www.gnu.org/licenses/\u003e.\n\n\ntry:\n    from HTMLParser import HTMLParser\nexcept ModuleNotFoundError:\n    from html.parser import HTMLParser\n\n# import qBT modules\ntry:\n    from novaprinter import prettyPrinter\n    from helpers import retrieve_url\nexcept ModuleNotFoundError:\n    pass\n\n\nclass nyaasi(object):\n    \"\"\"Class used by qBittorrent to search for torrents.\"\"\"\n\n    url = 'https://nyaa.si'\n    name = 'Nyaa.si'\n\n    # Whether to use magnet links or download torrent files ###################\n    #\n    # Set to 'True' to use magnet links, or 'False' to use torrent files\n    use_magent_links = True\n    #\n    ###########################################################################\n\n    # defines which search categories are supported by this search engine\n    # and their corresponding id. Possible categories are:\n    # 'all', 'movies', 'tv', 'music', 'games', 'anime', 'software', 'pictures',\n    # 'books'\n    supported_categories = {\n            'all': '0_0',\n            'anime': '1_0',\n            'books': '3_0',\n            'music': '2_0',\n            'pictures': '5_0',\n            'software': '6_0',\n            'tv': '4_0',\n            'movies': '4_0'}\n\n    class NyaasiParser(HTMLParser):\n        \"\"\"Parses Nyaa.si browse page for search results and stores them.\"\"\"\n\n        def __init__(self, res, url, use_magnet=True):\n            \"\"\"Construct a nyaasi html parser.\n\n            Parameters:\n            :param list res: a list to store the results in\n            :param str url: the base url of the search engine\n            :param str use_magnet: whether to link to magnet links or torrent\n                                   files\n            \"\"\"\n            try:\n                super().__init__()\n            except TypeError:\n                #  See: http://stackoverflow.com/questions/9698614/\n                HTMLParser.__init__(self)\n\n            self.engine_url = url\n            self.use_magnet_links = use_magnet\n            self.results = res\n            self.curr = None\n            self.td_counter = -1\n\n        def handle_starttag(self, tag, attr):\n            \"\"\"Tell the parser what to do with which tags.\"\"\"\n            if tag == 'a':\n                self.start_a(attr)\n\n        def handle_endtag(self, tag):\n            \"\"\"Handle the closing of table cells.\"\"\"\n            if tag == 'td':\n                self.start_td()\n\n        def start_a(self, attr):\n            \"\"\"Handle the opening of anchor tags.\"\"\"\n            params = dict(attr)\n            # get torrent name\n            if 'title' in params and 'class' not in params \\\n                    and params['href'].startswith('/view/'):\n                hit = {\n                        'name': params['title'],\n                        'desc_link': self.engine_url + params['href']}\n                if not self.curr:\n                    hit['engine_url'] = self.engine_url\n                    self.curr = hit\n            elif 'href' in params and self.curr:\n                # skip unrelated links\n                if not params['href'].startswith(\"magnet:?\") and \\\n                        not params['href'].endswith(\".torrent\"):\n                    return\n\n                # check whether to use torrent files or magnet links,\n                # then search for a matching download link, and move on\n                if not self.use_magnet_links and \\\n                        params['href'].endswith(\".torrent\"):\n                    self.curr['link'] = self.engine_url + params['href']\n                    self.td_counter += 1\n\n                elif params['href'].startswith(\"magnet:?\") \\\n                        and self.use_magnet_links:\n                    self.curr['link'] = params['href']\n                    self.td_counter += 1\n\n        def start_td(self):\n            \"\"\"Handle the opening of a table cell tag.\"\"\"\n            # Keep track of timers\n            if self.td_counter \u003e= 0:\n                self.td_counter += 1\n\n            # Add the hit to the results,\n            # then reset the counters for the next result\n            if self.td_counter \u003e= 5:\n                self.results.append(self.curr)\n                self.curr = None\n                self.td_counter = -1\n\n        def handle_data(self, data):\n            \"\"\"Extract data about the torrent.\"\"\"\n            # These fields matter\n            if self.td_counter \u003e 0 and self.td_counter \u003c= 5:\n                # Catch the size\n                if self.td_counter == 1:\n                    self.curr['size'] = data.strip()\n                # Catch the seeds\n                elif self.td_counter == 3:\n                    try:\n                        self.curr['seeds'] = int(data.strip())\n                    except ValueError:\n                        self.curr['seeds'] = -1\n                # Catch the leechers\n                elif self.td_counter == 4:\n                    try:\n                        self.curr['leech'] = int(data.strip())\n                    except ValueError:\n                        self.curr['leech'] = -1\n                # The rest is not supported by prettyPrinter\n                else:\n                    pass\n\n    # DO NOT CHANGE the name and parameters of this function\n    # This function will be the one called by nova2.py\n    def search(self, what, cat='all'):\n        \"\"\"\n        Retreive and parse engine search results by category and query.\n\n        Parameters:\n        :param what: a string with the search tokens, already escaped\n                     (e.g. \"Ubuntu+Linux\")\n        :param cat:  the name of a search category, see supported_categories.\n        \"\"\"\n        url = str(\"{0}/?f=0\u0026s=seeders\u0026o=desc\u0026c={1}\u0026q={2}\"\n                  .format(self.url,\n                          self.supported_categories.get(cat),\n                          what))\n\n        hits = []\n        page = 1\n        parser = self.NyaasiParser(hits, self.url, self.use_magent_links)\n        while True:\n            res = retrieve_url(url + \"\u0026p={}\".format(page))\n            parser.feed(res)\n            for each in hits:\n                prettyPrinter(each)\n\n            if len(hits) \u003c 75:\n                break\n            del hits[:]\n            page += 1\n\n        parser.close()\n","recorded":"2025-07-23 22:21:02.597532662","filePath":"null","pinned":false},{"value":"ðŸ“· 1148256-595248568.png","recorded":"2025-07-22 23:14:22.304859014","filePath":"/home/black_aktsu/.config/clipse/tmp_files/1148256-595248568.png","pinned":false},{"value":"\u003cmeta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\"\u003e\u003cimg crossorigin=\"anonymous\" alt=\"\" draggable=\"true\" class=\"x6s0dn4 x78zum5 x5yr21d xl56j7k x6ikm8r x10wlt62 x1n2onr6 xh8yej3 xhtitgo _ao3e\" tabindex=\"0\" src=\"blob:https://web.whatsapp.com/ea2b6aeb-df5f-4623-91ac-308b4be5d283\" style=\"visibility: visible; opacity: 1; transform: translateX(0px) translateY(0px) scale(1);\"\u003e","recorded":"2025-07-22 23:14:21.596134328","filePath":"null","pinned":false},{"value":"ðŸ“· 27249-899254854.png","recorded":"2025-07-22 23:13:52.918255553","filePath":"/home/black_aktsu/.config/clipse/tmp_files/27249-899254854.png","pinned":false},{"value":"ðŸ“· 162592-044123885.png","recorded":"2025-07-22 23:00:17.091821715","filePath":"/home/black_aktsu/.config/clipse/tmp_files/162592-044123885.png","pinned":false},{"value":"\u003cmeta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\"\u003e\u003cimg src=\"https://external-content.duckduckgo.com/iu/?u=http%3A%2F%2F3.bp.blogspot.com%2F-Cuv2CsScexA%2FVfHQknzsK0I%2FAAAAAAAAAAM%2F9WyW20c1JYA%2Fs1600%2Fjilo2.jpg\u0026amp;f=1\u0026amp;nofb=1\u0026amp;ipt=cebb22565668ef48f6eaa290660fed11e0e1fc64384ed358c9335f3e6902e7d1\" class=\"d1fekHMv2WPYZzgPAV7b\" alt=\"Cultura JilÃ³: Cultura do jilÃ³ (Solanum gilo)\" loading=\"eager\"\u003e","recorded":"2025-07-22 23:00:17.044871050","filePath":"null","pinned":false},{"value":"ðŸ“· 833322-139256506.png","recorded":"2025-07-22 22:44:28.504865977","filePath":"/home/black_aktsu/.config/clipse/tmp_files/833322-139256506.png","pinned":false},{"value":"\u003cmeta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\"\u003e\u003cimg src=\"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fi.ytimg.com%2Fvi%2FqltJU434NZw%2Fmaxresdefault.jpg\u0026amp;f=1\u0026amp;nofb=1\u0026amp;ipt=015aaca251423056d20baf0760962b0c5c51373ec2221cc10ad164df948544a6\" class=\"d1fekHMv2WPYZzgPAV7b\" alt=\"Mecanimais Brasil PortuguÃªs - Hora de DuraÃ§Ã£o Compilation 3 - YouTube\" loading=\"eager\"\u003e","recorded":"2025-07-22 22:44:28.139699229","filePath":"null","pinned":false},{"value":"ðŸ“· 98311-242592711.png","recorded":"2025-07-22 22:38:41.290414927","filePath":"/home/black_aktsu/.config/clipse/tmp_files/98311-242592711.png","pinned":false},{"value":"ðŸ“· 1089110-571802536.png","recorded":"2025-07-22 22:32:40.135447575","filePath":"/home/black_aktsu/.config/clipse/tmp_files/1089110-571802536.png","pinned":false},{"value":"file:///home/black_aktsu/Calibre%20Library/1996-2000/Honda%20Civic%20(178)/Honda%20Civic%20-%201996-2000.pdf\r\n","recorded":"2025-07-17 09:03:04.896263581","filePath":"null","pinned":false},{"value":"ðŸ˜©ðŸ’¥ðŸ”«","recorded":"2025-07-17 00:19:14.961510437","filePath":"null","pinned":false},{"value":"ðŸ“· 218325-291162334.png","recorded":"2025-07-15 21:40:44.455679554","filePath":"/home/black_aktsu/.config/clipse/tmp_files/218325-291162334.png","pinned":false},{"value":"file:///home/black_aktsu/Pictures/main.pdf\r\n","recorded":"2025-07-14 23:56:49.823741455","filePath":"null","pinned":false},{"value":"file:///home/black_aktsu/Downloads/quest1_itemA.m\r\nfile:///home/black_aktsu/Downloads/quest1_itemB.m\r\nfile:///home/black_aktsu/Downloads/quest2_itemA.m\r\n","recorded":"2025-07-14 23:56:02.317174490","filePath":"null","pinned":false},{"value":"file:///home/black_aktsu/workspace/latex/Relat%C3%B3rio_guias\u0026ondas/main.pdf\r\n","recorded":"2025-07-14 23:55:41.834486831","filePath":"null","pinned":false},{"value":"\\section{QuestÃ£o 02 - Item A}","recorded":"2025-07-14 23:49:39.708548752","filePath":"null","pinned":false},{"value":"-3.7222e-09","recorded":"2025-07-14 23:48:18.813399912","filePath":"null","pinned":false},{"value":"file:///home/black_aktsu/Pictures/q2-itema-dist.png\r\nfile:///home/black_aktsu/Pictures/q2-itema-lin.png\r\n","recorded":"2025-07-14 23:47:31.702628666","filePath":"null","pinned":false},{"value":"ðŸ“· 32642-627162929.png","recorded":"2025-07-14 23:47:00.687265068","filePath":"/home/black_aktsu/.config/clipse/tmp_files/32642-627162929.png","pinned":false},{"value":"ðŸ“· 65620-826044714.png","recorded":"2025-07-14 23:46:51.909815245","filePath":"/home/black_aktsu/.config/clipse/tmp_files/65620-826044714.png","pinned":false},{"value":"\\begin{container}{10cm}{GrÃ¡fico 3 â€“ DistribuiÃ§Ã£o de Potencial}{Fonte: Elaborado pelo autor.}\n\t\n\t\\includegraphics[width=10cm]{q1-itemb-dist.png}\n\t\n\\end{container}\n\n\\begin{container}{10cm}{GrÃ¡fico 4 â€“ Linhas de Campo ElÃ©trico}{Fonte: Elaborado pelo autor.}\n\t\n\t\\includegraphics[width=10cm]{q1-itemb-lin.png}\n\t\n\\end{container}\n\nPara este item, temos que $C1 = 2.9896e-09$ e $C2 = -5.9792e-09$.","recorded":"2025-07-14 23:46:14.195347013","filePath":"null","pinned":false},{"value":"-5.9792e-09","recorded":"2025-07-14 23:44:00.879063051","filePath":"null","pinned":false},{"value":"2.9896e-09","recorded":"2025-07-14 23:43:51.628046159","filePath":"null","pinned":false},{"value":"$C1 = -2.9777e-09$","recorded":"2025-07-14 23:43:41.384428918","filePath":"null","pinned":false},{"value":"file:///home/black_aktsu/Pictures/q1-itemb-dist.png\r\nfile:///home/black_aktsu/Pictures/q1-itemb-lin.png\r\n","recorded":"2025-07-14 23:42:17.602315297","filePath":"null","pinned":false},{"value":"ðŸ“· 25154-057463849.png","recorded":"2025-07-14 23:41:45.100717137","filePath":"/home/black_aktsu/.config/clipse/tmp_files/25154-057463849.png","pinned":false},{"value":"ðŸ“· 51609-870689788.png","recorded":"2025-07-14 23:41:32.926908098","filePath":"/home/black_aktsu/.config/clipse/tmp_files/51609-870689788.png","pinned":false},{"value":"\\begin{container}{10cm}{GrÃ¡fico 1 â€“ DistribuiÃ§Ã£o de Potencial}{Fonte: Elaborado pelo autor.}\n\t\n\t\\includegraphics[width=10cm]{q1-itema-dist.png}\n\t\n\\end{container}\n\n\\begin{container}{10cm}{GrÃ¡fico 2 â€“ Linhas de Campo ElÃ©trico}{Fonte: Elaborado pelo autor.}\n\t\n\t\\includegraphics[width=10cm]{q1-itema-lin.png}\n\t\n\\end{container}\n\nPara este item, temos que $C = -2.9777e-09$.","recorded":"2025-07-14 23:40:54.498599379","filePath":"null","pinned":false},{"value":"-2.9777e-09","recorded":"2025-07-14 23:38:50.628857221","filePath":"null","pinned":false},{"value":"\\begin{container}{10cm}{GrÃ¡fico 1 â€“ DistribuiÃ§Ã£o de Potencial}{Fonte: Elaborado pelo autor.}\n\t\n\t\\includegraphics[width=10cm]{q1-itema-dist.png}\n\t\n\\end{container}","recorded":"2025-07-14 23:37:44.765014768","filePath":"null","pinned":false},{"value":"file:///home/black_aktsu/Pictures/q1-itema-dist.png\r\nfile:///home/black_aktsu/Pictures/q1-itema-lin.png\r\n","recorded":"2025-07-14 23:35:46.427472289","filePath":"null","pinned":false},{"value":"ðŸ“· 30718-297366998.png","recorded":"2025-07-14 23:35:05.352311441","filePath":"/home/black_aktsu/.config/clipse/tmp_files/30718-297366998.png","pinned":false},{"value":"ðŸ“· 72216-136599402.png","recorded":"2025-07-14 23:34:48.183842117","filePath":"/home/black_aktsu/.config/clipse/tmp_files/72216-136599402.png","pinned":false},{"value":"ðŸ“· 72199-308028740.png","recorded":"2025-07-14 23:30:47.269019375","filePath":"null","pinned":false},{"value":"ðŸ“· 72199-308028740.png","recorded":"2025-07-14 23:30:25.354291600","filePath":"/home/black_aktsu/.config/clipse/tmp_files/72199-308028740.png","pinned":false},{"value":"\\begin{container}{10cm}{GrÃ¡fico 1 â€“ DistribuiÃ§Ã£o dos documentos analisados por programa de pÃ³s-graduaÃ§Ã£o}{Fonte: Elaborado pelo autor.}\n\n\\includegraphics[width=10cm]{graph.png}\n\n\\end{container}","recorded":"2025-07-14 23:16:02.742956757","filePath":"null","pinned":false},{"value":"CapacitÃ¢ncia Total (C): Calcular a capacidade da estrutura de armazenar carga,","recorded":"2025-07-14 23:10:13.681530543","filePath":"null","pinned":false},{"value":"Campo ElÃ©trico (vecE): Encontrar a direÃ§Ã£o e a magnitude do campo elÃ©trico,","recorded":"2025-07-14 23:09:40.340598263","filePath":"null","pinned":false},{"value":"DistribuiÃ§Ã£o de Potencial (V): Mapear o valor do potencial elÃ©trico em cada ponto do espaÃ§o (da grade).","recorded":"2025-07-14 23:09:11.971389627","filePath":"null","pinned":false},{"value":"O MDF Ã© uma tÃ©cnica numÃ©rica que resolve a equaÃ§Ã£o de Laplace (âˆ‡2V=0) em uma grade discreta de pontos. Em vez de uma soluÃ§Ã£o analÃ­tica contÃ­nua, o mÃ©todo calcula o valor do potencial em cada nÃ³ da grade, assumindo que o potencial em um ponto Ã© a mÃ©dia ponderada dos seus vizinhos.","recorded":"2025-07-14 23:04:37.453144530","filePath":"null","pinned":false},{"value":"A estrutura stripline guia uma onda eletromagnÃ©tica do tipo TEM (Transversal EletromagnÃ©tica). Isso significa que tanto o campo elÃ©trico quanto o campo magnÃ©tico sÃ£o perpendiculares Ã  direÃ§Ã£o de propagaÃ§Ã£o da onda.","recorded":"2025-07-14 23:03:21.889540252","filePath":"null","pinned":false},{"value":"Uma estrutura stripline (ou \"linha de fita\") Ã© um tipo de linha de transmissÃ£o usada para guiar ondas eletromagnÃ©ticas, especialmente em altas frequÃªncias (micro-ondas e rÃ¡dio frequÃªncia). Ela Ã© fundamental no projeto de placas de circuito impresso (PCBs) para dispositivos como celulares, radares, satÃ©lites e equipamentos de rede de alta velocidade.","recorded":"2025-07-14 23:01:16.568929739","filePath":"null","pinned":false},{"value":"ðŸ“· 51304-499601711.png","recorded":"2025-07-14 22:57:13.552831894","filePath":"/home/black_aktsu/.config/clipse/tmp_files/51304-499601711.png","pinned":false},{"value":"file:///home/black_aktsu/Downloads/Relat%C3%B3rio_de_F%C3%ADsica_Experimental__Template___4_.zip\r\n","recorded":"2025-07-14 22:35:37.273529642","filePath":"null","pinned":false},{"value":"clear;\nclose all;\nclc;\n\n% Definindo as variaveis do problema\n% Permissividade do vacuo\ne0 = 8.854e-12;\n\n% Permissividade relativa\neR = 2;\n\n% Potencial do condutor\nV0 = -10;\n\n% Altura\nh = 0.03;\n\n% Largura\nl = 0.12;\n\n% Numero de pontos em x\nNx = 200;\n\n% numero de pontos em y\nNy = 100;\n\n% Inicio do eletrodo\nx0 = 68;\n\n% Fim do eletrodo\nx1 = 128;\n\n% Altura do eletrodo\ny0 = 24;\n\n% Permissividade eletrica relativa\nErel = ones(Ny,Nx);\n\nErel(1:22,:) = eR; \n\n% Permissividade eletrica\nEp = e0 .* Erel;\n\n% Vetor incial de Perm. Ele\nEpX = zeros(Ny, Nx - 1);\nEpY = zeros(Ny - 1, Nx);\n\n% Antes de calcular o potencial, Ã© necessario conhecer as interfaces da\n% area para X e Y completos, dada a permissividade eletrica.\n\n% Interfaces horizontais(X)\nfor j = 1:Ny\n    for i = 1:Nx-1\n        EpX(j, i) = (2 * Ep(j, i) * Ep(j, i+1)) / (Ep(j, i) + Ep(j, i+1));\n    end\nend\n\n% Interfaces verticais(Y)\nfor j = 1:Ny-1\n    for i = 1:Nx\n        EpY(j, i) = (2 * Ep(j, i) * Ep(j+1, i)) / (Ep(j, i) + Ep(j+1, i));\n    end\nend\n\n% V inicial\nV = zeros(Ny,Nx);\nV(y0, x0:x1) = V0;\n\n% Delta de tolerancia\ntol = 1e-3;\n\n% LaÃ§o do calculo do potencial\nwhile true\n    % Potencial antes da mudanÃ§a\n    V_anterior = V;\n    for i = 2:(Nx-1)\n        for j = 2:(Ny-1)\n            % Nao muda o potencial no eletrodo\n            if ~(j == y0 \u0026\u0026 i \u003e= x0 \u0026\u0026 i \u003c= x1)\n                eps_right = EpX(j, i);\n                eps_left  = EpX(j, i-1);\n                eps_up    = EpY(j, i);\n                eps_down  = EpY(j-1, i);\n                \n                sum_coeffs = eps_right + eps_left + eps_up + eps_down;\n                V(j,i) = (1 / sum_coeffs) * (V(j, i+1) * eps_right + V(j, i-1) * eps_left  + V(j+1, i) * eps_up + V(j-1, i) * eps_down);\n            end\n        end\n    end\n            delta = max(abs(V - V_anterior));\n            if delta \u003c= tol\n                break\n            end \nend\n\n% Definindo o vetor no eixo x e y\nvaloresX = linspace(0, l, Nx);\nvaloresY = linspace(0, h, Ny);\n\n% DefiniÃ§ao das variaveis do plot da distribuiÃ§ao de potencial\n[X,Y] = meshgrid(valoresX, valoresY);\nfigure;\ncontourf(X,Y,V,30, \"LineStyle\",'none');\ncolorbar;\nhold on;\nxlabel(\"Eixo x\");\nylabel(\"Eixo y\");\n\n\n% Valores a serem plotados\nplot(valoresX(x0:x1), valoresY(y0)*ones(1, length(x0:x1)), 'r-', 'LineWidth', 2);\nhold off;\n[Ex, Ey] = gradient(V);\n\ntitle(\"DistribuiÃ§Ã£o de Potencial Q2-itemA\");\nlegend(\"Campo ElÃ©trico\", \"Eletrodo\");\n\n% Valores amostrados das linhas do campo eletrico\npasso = 12;\n\nX_amostrado = X(1:passo:end, 1:passo:end);\nY_amostrado = Y(1:passo:end, 1:passo:end);\n\nEx_amostrado = Ex(1:passo:end, 1:passo:end);\nEy_amostrado = Ey(1:passo:end, 1:passo:end);\n\n% DefiniÃ§ao das variaveis do plot das linhas de campo eletrico\nfigure;\n% Linhas de campo\nquiver(X_amostrado, Y_amostrado, Ex_amostrado, Ey_amostrado, 1.5);\nhold on;\n% Grafico com o condutor das linhas de campo elÃ©trico\nplot(valoresX(x0:x1), valoresY(y0)*ones(1, length(x0:x1)), 'r-', 'LineWidth', 2);\n\nxlabel('Eixo x');\nylabel('Eixo y');\naxis equal;  % Mantem proporÃ§ao no grafico\n\ntitle('Linhas de Campo ElÃ©trico Q1-itemA');\nlegend(\"Linhas de campo\", \"Eletrodo\");\n\n%axis equal; % Mantem proporÃ§ao no grafico\ngrid on;\nhold off;\n\n% Carga\nW = 0;\n\n% Calculando W\nfor j = 2:Ny-1\n    for i = 2:Nx-1\n        W = W + (1/2) * eR * e0 * ((V(j-1,i) - V(j+1,i))^2 + (V(j,i - 1) - V(j,i+1))^2 );\n    end\nend\n\n% Calculando a capacitancia total da estrutura\nC = 2 * W / V0;\ndisp('Valor da capacitÃ¢ncia total da estrutura:')\ndisp(C);","recorded":"2025-07-14 22:22:08.927541050","filePath":"null","pinned":false},{"value":"clear;\nclose all;\nclc;\n\n% Definindo as variaveis do problema\n% Potencial do condutor\nV1 = 10;\nV2 = -5;\n\n% Altura\nh = 0.03;\n\n% Largura\nl = 0.12;\n\n% Numero de pontos em x\nNx = 400;\n\n% numero de pontos em y\nNy = 100;\n\n% Definindo o vetor no eixo x e y\nvaloresX = linspace(0, l, Nx);\nvaloresY = linspace(0, h, Ny);\n\n% Matriz de potencial da regiÃ£o\nV = zeros(Ny, Nx);\n\n% O eletrodo deste item Ã© metade do eletrodo do item anterior\n% e a distancia entre os dois eletrodos do item Ã© o tamanho deles,\n% assumo aqui o tamanho do eletrodo igual a 30.\n\n% Inicio do eletrodo 2\nEle2_x0 = 100 + 30/2;\n\n% Fim do eletrodo 2\nEle2_x1 = Ele2_x0 + 30;\n\n% Fim do eletrodo 1\nEle1_x1 = 100 - 30/2;\n\n% Inicio do eletrodo 1\nEle1_x0 = Ele1_x1 - 30;\n\n% Altura dos eletrodos\ny0 = 50;\n\n% V inicial\nV(y0, Ele1_x0:Ele1_x1) = V1;\nV(y0, Ele2_x0:Ele2_x1) = V2;\n\n% Delta de tolerancia\ntol = 1e-3;\n\n% LaÃ§o do calculo do potencial\nwhile true\n    % Potencial antes da mudanÃ§a\n    V_anterior = V;\n    for i = 2:(Nx-1)\n        for j = 2:(Ny-1)\n            % Nao muda o potencial nos eletrodos\n            if ~(j == y0 \u0026\u0026 i \u003e= Ele1_x0 \u0026\u0026 i \u003c= Ele1_x1) \u0026\u0026 ~(j == y0 \u0026\u0026 i \u003e= Ele2_x0 \u0026\u0026 i \u003c= Ele2_x1)\n                V(j,i) = (V(j-1,i) + V(j+1,i) + V(j,i-1) + V(j,i+1))/4;\n            end\n        end\n    end\n            delta = max(abs(V - V_anterior));\n            if delta \u003c= tol\n                break\n            end \nend\n\n% DefiniÃ§ao das variaveis do plot da distribuiÃ§ao de potencial\n[X,Y] = meshgrid(valoresX, valoresY);\nfigure;\ncontourf(X,Y,V,30, \"LineStyle\",'none');\ncolorbar;\nhold on;\nxlabel(\"Eixo x\");\nylabel(\"Eixo y\");\n\n\n% Valores a serem plotados\nplot(valoresX(Ele1_x0:Ele1_x1), valoresY(y0)*ones(1, length(Ele1_x0:Ele1_x1)), 'r-', 'LineWidth', 2);\nplot(valoresX(Ele2_x0:Ele2_x1), valoresY(y0)*ones(1, length(Ele2_x0:Ele2_x1)), 'r-', 'LineWidth', 2);\n[Ex, Ey] = gradient(V, valoresX, valoresY);\n\n\ntitle(\"DistribuiÃ§Ã£o de Potencial Q1-itemB\");\nlegend(\"Campo ElÃ©trico\", \"Eletrodo\");\n\n% Valores amostrados das linhas do campo eletrico\npasso = 12;\n\nX_amostrado = X(1:passo:end, 1:passo:end);\nY_amostrado = Y(1:passo:end, 1:passo:end);\n\nEx_amostrado = Ex(1:passo:end, 1:passo:end);\nEy_amostrado = Ey(1:passo:end, 1:passo:end);\n\n% DefiniÃ§ao das variaveis do plot das linhas de campo eletrico\nfigure;\n% Linhas de campo\nquiver(X_amostrado, Y_amostrado, Ex_amostrado, Ey_amostrado, 1.5);\nhold on;\n% Grafico com o condutor das linhas de campo elÃ©trico\nplot(valoresX(Ele1_x0:Ele1_x1), valoresY(y0)*ones(1, length(Ele1_x0:Ele1_x1)), 'r-', 'LineWidth', 2);\nplot(valoresX(Ele2_x0:Ele2_x1), valoresY(y0)*ones(1, length(Ele2_x0:Ele2_x1)), 'r-', 'LineWidth', 2);\n\nxlabel('Eixo x');\nylabel('Eixo y');\n\naxis equal;  % Mantem proporÃ§ao no grafico\n\ntitle('Linhas de Campo ElÃ©trico Q1-itemB');\nlegend(\"Linhas de campo\", \"Eletrodo\");\n\n%axis equal; % Mantem proporÃ§ao no grafico\ngrid on;\nhold off;\n\n\n% Permissividade do vacuo\ne0 = 8.854e-12;\n% Permissividade relativa\neR = 2;\n% Carga\nW = 0;\n\n% Calculando W\nfor j = 2:Ny-1\n    for i = 2:Nx-1\n        W = W + (1/2) * eR * e0 * ((V(j-1,i) - V(j+1,i))^2 + (V(j,i - 1) - V(j,i+1))^2 );\n    end\nend\n\n% Calculando a capacitancia total das estruturas\nC1 = 2 * W / V1;\ndisp('Valor da capacitÃ¢ncia total da estrutura 1:')\ndisp(C1);\n\nC2 = 2 * W / V2;\ndisp('Valor da capacitÃ¢ncia total da estrutura 2:')\ndisp(C2);","recorded":"2025-07-14 22:21:58.977543005","filePath":"null","pinned":false},{"value":"clear;\nclose all;\nclc;\n\n% Definindo as variaveis do problema\n% Potencial do condutor\nV0 = -10;\n\n% Altura\nh = 0.03;\n\n% Largura\nl = 0.12;\n\n% Numero de pontos em x\nNx = 200;\n\n% numero de pontos em y\nNy = 100;\n\n% Definindo o vetor no eixo x e y\nvaloresX = linspace(0, l, Nx);\nvaloresY = linspace(0, h, Ny);\n\n% Matriz de potencial da regiÃ£o\nV = zeros(Ny, Nx);\n\n% Inicio do eletrodo\nx0 = 68;\n\n% Fim do eletrodo\nx1 = 128;\n\n% Altura do eletrodo\ny0 = 50;\n\n% V inicial\nV(y0, x0:x1) = V0;\n\n% Delta de tolerancia\ntol = 1e-3;\n\n% LaÃ§o do calculo do potencial\nwhile true\n    % Potencial antes da mudanÃ§a\n    V_anterior = V;\n    for i = 2:(Nx-1)\n        for j = 2:(Ny-1)\n            % Nao muda o potencial no eletrodo\n            if ~(j == y0 \u0026\u0026 i \u003e= x0 \u0026\u0026 i \u003c= x1)\n                V(j,i) = (V(j-1,i) + V(j+1,i) + V(j,i-1) + V(j,i+1))/4;\n            end\n        end\n    end\n            delta = max(abs(V - V_anterior));\n            if delta \u003c= tol\n                break\n            end \nend\n\n% DefiniÃ§ao das variaveis do plot da distribuiÃ§ao de potencial\n[X,Y] = meshgrid(valoresX, valoresY);\nfigure;\ncontourf(X,Y,V,30, \"LineStyle\",'none');\ncolorbar;\nhold on;\nxlabel(\"Eixo x\");\nylabel(\"Eixo y\");\n\n\n% Valores a serem plotados\nplot(valoresX(x0:x1), valoresY(y0)*ones(1, length(x0:x1)), 'r-', 'LineWidth', 2);\n[Ex, Ey] = gradient(V, valoresX, valoresY);\n\ntitle(\"DistribuiÃ§Ã£o de Potencial Q1-itemA\");\nlegend(\"Campo ElÃ©trico\", \"Eletrodo\");\n\n% Valores amostrados das linhas do campo eletrico\npasso = 12;\n\nX_amostrado = X(1:passo:end, 1:passo:end);\nY_amostrado = Y(1:passo:end, 1:passo:end);\n\nEx_amostrado = Ex(1:passo:end, 1:passo:end);\nEy_amostrado = Ey(1:passo:end, 1:passo:end);\n\n% DefiniÃ§ao das variaveis do plot das linhas de campo eletrico\nfigure;\n% Linhas de campo\nquiver(X_amostrado, Y_amostrado, Ex_amostrado, Ey_amostrado, 1.5);\nhold on;\n% Grafico com o condutor das linhas de campo elÃ©trico\nplot(valoresX(x0:x1), valoresY(y0)*ones(1, length(x0:x1)), 'r-', 'LineWidth', 2);\n\nxlabel('Eixo x');\nylabel('Eixo y');\naxis equal;  % Mantem proporÃ§ao no grafico\n\ntitle('Linhas de Campo ElÃ©trico Q1-itemA');\nlegend(\"Linhas de campo\", \"Eletrodo\");\n\n%axis equal; % Mantem proporÃ§ao no grafico\ngrid on;\nhold off;\n\n% Permissividade do vacuo\ne0 = 8.854e-12;\n% Permissividade relativa\neR = 2;\n% Carga\nW = 0;\n\n% Calculando W\nfor j = 2:Ny-1\n    for i = 2:Nx-1\n        W = W + (1/2) * eR * e0 * ((V(j-1,i) - V(j+1,i))^2 + (V(j,i - 1) - V(j,i+1))^2 );\n    end\nend\n\n% Calculando a capacitancia total da estrutura\nC = 2 * W / V0;\ndisp('Valor da capacitÃ¢ncia total da estrutura:')\ndisp(C);","recorded":"2025-07-14 22:21:13.845867765","filePath":"null","pinned":false},{"value":"ðŸ“· 873582-653416421.png","recorded":"2025-07-14 22:17:36.565966971","filePath":"/home/black_aktsu/.config/clipse/tmp_files/873582-653416421.png","pinned":false},{"value":"\u003cmeta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\"\u003e\u003cimg crossorigin=\"anonymous\" alt=\"\" draggable=\"true\" class=\"x6s0dn4 x78zum5 x5yr21d xl56j7k x6ikm8r x10wlt62 x1n2onr6 xh8yej3 xhtitgo _ao3e\" tabindex=\"0\" src=\"blob:https://web.whatsapp.com/55a6e8a3-6223-4854-b9cf-b52b74861f74\" style=\"visibility: visible; opacity: 1; transform: translateX(0px) translateY(0px) scale(1);\"\u003e","recorded":"2025-07-14 22:17:35.654457368","filePath":"null","pinned":false},{"value":"ðŸ“· 25521-215103914.png","recorded":"2025-07-14 22:16:46.308118942","filePath":"/home/black_aktsu/.config/clipse/tmp_files/25521-215103914.png","pinned":false},{"value":"clear;\nclose all;\nclc;\n\n% Definindo as variaveis do problema\n% Permissividade do vacuo\ne0 = 8.854e-12;\n\n% Permissividade relativa\neR = 2;\n\n% Potencial do condutor\nV1 = 10;\nV2 = -5;\n\n% Altura\nh = 0.03;\n\n% Largura\nl = 0.12;\n\n% Numero de pontos em x\nNx = 400;\n\n% numero de pontos em y\nNy = 100;\n\n% O eletrodo deste item Ã© metade do eletrodo do item anterior\n% e a distancia entre os dois eletrodos do item Ã© o tamanho deles,\n% assumo aqui o tamanho do eletrodo igual a 30.\n\n% Inicio do eletrodo 2\nEle2_x0 = 100 + 30/2;\n\n% Fim do eletrodo 2\nEle2_x1 = Ele2_x0 + 30;\n\n% Fim do eletrodo 1\nEle1_x1 = 100 - 30/2;\n\n% Inicio do eletrodo 1\nEle1_x0 = Ele1_x1 - 30;\n\n% Altura dos eletrodos\ny0 = 24;\n\n% V inicial\nV(y0, Ele1_x0:Ele1_x1) = V1;\nV(y0, Ele2_x0:Ele2_x1) = V2;\n\n% Permissividade eletrica relativa\nErel = ones(Ny,Nx);\n\nErel(1:22,:) = eR; \n\n% Permissividade eletrica\nEp = e0 .* Erel;\n\n% Vetor incial de Perm. Ele\nEpX = zeros(Ny, Nx - 1);\nEpY = zeros(Ny - 1, Nx);\n\n% Antes de calcular o potencial, Ã© necessario conhecer as interfaces da\n% area para X e Y completos, dada a permissividade eletrica.\n\n% Interfaces horizontais(X)\nfor j = 1:Ny\n    for i = 1:Nx-1\n        EpX(j, i) = (2 * Ep(j, i) * Ep(j, i+1)) / (Ep(j, i) + Ep(j, i+1));\n    end\nend\n\n% Interfaces verticais(Y)\nfor j = 1:Ny-1\n    for i = 1:Nx\n        EpY(j, i) = (2 * Ep(j, i) * Ep(j+1, i)) / (Ep(j, i) + Ep(j+1, i));\n    end\nend\n\n% Delta de tolerancia\ntol = 1e-3;\n\n% LaÃ§o do calculo do potencial\nwhile true\n    % Potencial antes da mudanÃ§a\n    V_anterior = V;\n    for i = 2:(Nx-1)\n        for j = 2:(Ny-1)\n            % Nao muda o potencial no eletrodo\n            if ~(j == y0 \u0026\u0026 i \u003e= Ele1_x0 \u0026\u0026 i \u003c= Ele1_x1) \u0026\u0026 ~(j == y0 \u0026\u0026 i \u003e= Ele2_x0 \u0026\u0026 i \u003c= Ele2_x1)\n                eps_right = EpX(j, i);\n                eps_left  = EpX(j, i-1);\n                eps_up    = EpY(j, i);\n                eps_down  = EpY(j-1, i);\n                \n                sum_coeffs = eps_right + eps_left + eps_up + eps_down;\n                V(j,i) = (1 / sum_coeffs) * (V(j, i+1) * eps_right + V(j, i-1) * eps_left  + V(j+1, i) * eps_up + V(j-1, i) * eps_down);\n            end\n        end\n    end\n            delta = max(abs(V - V_anterior));\n            if delta \u003c= tol\n                break\n            end \nend\n\n% Definindo o vetor no eixo x e y\nvaloresX = linspace(0, l, Nx);\nvaloresY = linspace(0, h, Ny);\n\n% DefiniÃ§ao das variaveis do plot da distribuiÃ§ao de potencial\n[X,Y] = meshgrid(valoresX, valoresY);\nfigure;\ncontourf(X,Y,V,30, \"LineStyle\",'none');\ncolorbar;\nhold on;\nxlabel(\"Eixo x\");\nylabel(\"Eixo y\");\n\n\n% Valores a serem plotados\nplot(valoresX(x0:x1), valoresY(y0)*ones(1, length(x0:x1)), 'r-', 'LineWidth', 2);\nhold off;\n[Ex, Ey] = gradient(V);\n\ntitle(\"DistribuiÃ§Ã£o de Potencial Q2-itemA\");\nlegend(\"Campo ElÃ©trico\", \"Eletrodo\");\n\n% Valores amostrados das linhas do campo eletrico\npasso = 12;\n\nX_amostrado = X(1:passo:end, 1:passo:end);\nY_amostrado = Y(1:passo:end, 1:passo:end);\n\nEx_amostrado = Ex(1:passo:end, 1:passo:end);\nEy_amostrado = Ey(1:passo:end, 1:passo:end);\n\n% DefiniÃ§ao das variaveis do plot das linhas de campo eletrico\nfigure;\n% Linhas de campo\nquiver(X_amostrado, Y_amostrado, Ex_amostrado, Ey_amostrado, 1.5);\nhold on;\n% Grafico com o condutor das linhas de campo elÃ©trico\nplot(valoresX(x0:x1), valoresY(y0)*ones(1, length(x0:x1)), 'r-', 'LineWidth', 2);\n\nxlabel('Eixo x');\nylabel('Eixo y');\naxis equal;  % Mantem proporÃ§ao no grafico\n\ntitle('Linhas de Campo ElÃ©trico Q1-itemA');\nlegend(\"Linhas de campo\", \"Eletrodo\");\n\n%axis equal; % Mantem proporÃ§ao no grafico\ngrid on;\nhold off;\n\n% Carga\nW = 0;\n\n% Calculando W\nfor j = 2:Ny-1\n    for i = 2:Nx-1\n        W = W + (1/2) * eR * e0 * ((V(j-1,i) - V(j+1,i))^2 + (V(j,i - 1) - V(j,i+1))^2 );\n    end\nend\n\n% Calculando a capacitancia total da estrutura\nC = 2 * W / V0;\ndisp('Valor da capacitÃ¢ncia total da estrutura:')\ndisp(C);","recorded":"2025-07-14 22:14:56.044601563","filePath":"null","pinned":false},{"value":"V(j,i) = (1 / sum_coeffs) * (V(j, i+1) * eps_right + V(j, i-1) * eps_left  + V(j+1, i) * eps_up + V(j-1, i) * eps_down);","recorded":"2025-07-14 22:12:52.226812832","filePath":"null","pinned":false},{"value":"~(j == y0 \u0026\u0026 i \u003e= Ele1_x0 \u0026\u0026 i \u003c= Ele1_x1) \u0026\u0026 ~(j == y0 \u0026\u0026 i \u003e= Ele2_x0 \u0026\u0026 i \u003c= Ele2_x1)","recorded":"2025-07-14 22:11:50.500916426","filePath":"null","pinned":false},{"value":"% Definindo o vetor no eixo x e y\nvaloresX = linspace(0, l, Nx);\nvaloresY = linspace(0, h, Ny);","recorded":"2025-07-14 22:08:48.464470383","filePath":"null","pinned":false},{"value":"file:///home/black_aktsu/Downloads/relat%C3%B3rio_Guias_e_Ondas\r\n","recorded":"2025-07-14 22:00:54.430005907","filePath":"null","pinned":false},{"value":"h57Y9ivGM3Qh4G","recorded":"2025-07-14 21:57:13.398216173","filePath":"null","pinned":false},{"value":"ruanpereiraalves@alu.ufc.br","recorded":"2025-07-14 21:57:08.088349110","filePath":"null","pinned":false},{"value":"ðŸ“· 800633-791431765.png","recorded":"2025-07-14 21:16:03.409180760","filePath":"/home/black_aktsu/.config/clipse/tmp_files/800633-791431765.png","pinned":false},{"value":"ðŸ“· 358962-469093965.png","recorded":"2025-07-14 21:12:42.758600714","filePath":"/home/black_aktsu/.config/clipse/tmp_files/358962-469093965.png","pinned":false},{"value":"file:///home/black_aktsu/Downloads/void-live-x86_64-20250202-base.iso\r\n","recorded":"2025-07-09 00:09:48.342271739","filePath":"null","pinned":false},{"value":"file:///home/black_aktsu/Downloads/void-live-x86_64-20250202-xfce.iso\r\n","recorded":"2025-07-08 23:39:31.712864830","filePath":"null","pinned":false},{"value":"Birch","recorded":"2025-07-08 23:18:53.195583802","filePath":"null","pinned":false},{"value":"pacman -Qqtd","recorded":"2025-07-08 22:27:14.058528612","filePath":"null","pinned":false},{"value":"file:///home/black_aktsu/Downloads/antiX-23.2_x64-base.iso\r\nfile:///home/black_aktsu/Downloads/PeppermintOS-devuan_64_xfce.iso\r\n","recorded":"2025-07-08 21:16:30.811499353","filePath":"null","pinned":false},{"value":"https://mullvad.net/en/check","recorded":"2025-07-07 22:23:34.973417250","filePath":"null","pinned":false},{"value":"ðŸ“· 8840-603786666.png","recorded":"2025-07-07 22:22:24.653212870","filePath":"/home/black_aktsu/.config/clipse/tmp_files/8840-603786666.png","pinned":false}]}